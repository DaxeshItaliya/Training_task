{"ast":null,"code":"var _jsxFileName = \"/home/mtech/Documents/react/form/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  // Field value\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); // Field Touch\n\n  const [nameIsTouched, setNameIsTouched] = useState(false);\n  const [emailIsTouched, setEmailIsTouched] = useState(false); // Field value Validation\n\n  const nameIsValid = input.trim() !== \"\";\n  const emailIsValid = input.trim() !== \"\" || input.trim().includes(\"@\") || input.trim().includes(\".\"); // Field Validation on blur\n\n  const nameInputIsValid = !nameIsValid && nameIsTouched;\n  const emailInputIsValid = !emailIsValid && nameIsTouched; // Form Validation\n\n  let formIsValid = false;\n\n  if (nameInputIsValid && emailInputIsValid) {\n    formIsValid = true;\n  } //On Field Change Update\n\n\n  const nameInputCHangeHandler = event => {\n    setName(event.target.value);\n  };\n\n  const emailInputCHangeHandler = event => {\n    setEmail(event.target.value);\n  }; //On Field blur Update\n\n\n  const nameInputBlurHandler = () => {\n    setNameIsTouched(true);\n  };\n\n  const emailInputBlurHandler = () => {\n    setEmailIsTouched(true);\n  }; //On Form Submit\n\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setNameIsTouched(true);\n    setEmailIsTouched(true);\n    if (!nameIsValid || !emailIsValid) return;\n    console.log(input); // Reset position\n\n    setName(\"\");\n    setEmail(\"\");\n    setNameIsTouched(false);\n    setEmailIsTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onInput: nameInputCHangeHandler,\n        onBlur: nameInputBlurHandler,\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), !nameIsValid && nameIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please Enter Valid Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onInput: emailInputCHangeHandler,\n        onBlur: emailInputBlurHandler,\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), !nameIsValid && nameIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please Enter Valid Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"5juTGzBlwHA8uLimmPC+ljs0V6s=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/mtech/Documents/react/form/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","name","setName","email","setEmail","nameIsTouched","setNameIsTouched","emailIsTouched","setEmailIsTouched","nameIsValid","input","trim","emailIsValid","includes","nameInputIsValid","emailInputIsValid","formIsValid","nameInputCHangeHandler","event","target","value","emailInputCHangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmitHandler","preventDefault","console","log","nameInputClasses"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  // Field value\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // Field Touch\n  const [nameIsTouched, setNameIsTouched] = useState(false);\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\n\n  // Field value Validation\n  const nameIsValid = input.trim() !== \"\";\n  const emailIsValid =\n    input.trim() !== \"\" ||\n    input.trim().includes(\"@\") ||\n    input.trim().includes(\".\");\n\n  // Field Validation on blur\n  const nameInputIsValid = !nameIsValid && nameIsTouched;\n  const emailInputIsValid = !emailIsValid && nameIsTouched;\n\n  // Form Validation\n  let formIsValid = false;\n\n  if (nameInputIsValid && emailInputIsValid) {\n    formIsValid = true;\n  }\n\n  //On Field Change Update\n  const nameInputCHangeHandler = (event) => {\n    setName(event.target.value);\n  };\n\n  const emailInputCHangeHandler = (event) => {\n    setEmail(event.target.value);\n  };\n\n  //On Field blur Update\n  const nameInputBlurHandler = () => {\n    setNameIsTouched(true);\n  };\n  const emailInputBlurHandler = () => {\n    setEmailIsTouched(true);\n  };\n\n  //On Form Submit\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    setNameIsTouched(true);\n    setEmailIsTouched(true);\n\n    if (!nameIsValid || !emailIsValid) return;\n    console.log(input);\n\n    // Reset position\n    setName(\"\");\n    setEmail(\"\");\n    setNameIsTouched(false);\n    setEmailIsTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          onInput={nameInputCHangeHandler}\n          onBlur={nameInputBlurHandler}\n          id=\"name\"\n        />\n      </div>\n      {!nameIsValid && nameIsTouched && <p>Please Enter Valid Input</p>}\n\n      <div className={nameInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"text\"\n          onInput={emailInputCHangeHandler}\n          onBlur={emailInputBlurHandler}\n          id=\"email\"\n        />\n      </div>\n      {!nameIsValid && nameIsTouched && <p>Please Enter Valid Input</p>}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}