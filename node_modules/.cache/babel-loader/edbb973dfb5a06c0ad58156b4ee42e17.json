{"ast":null,"code":"var _jsxFileName = \"/home/mtech/Documents/react/form/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useValidator from \"../Hooks/use-validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: name,\n    inputIsValid: nameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameInputCHangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    reset: nameReset\n  } = useValidator(value => value.trim() !== \"\");\n  const {\n    value: email,\n    inputIsValid: emailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailInputCHangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: emailReset\n  } = useValidator(value => value.trim() !== \"\" && value.trim().includes(\"@\") && value.trim().includes(\".\")); // Form Validation\n\n  let formIsValid = false;\n\n  if (nameIsValid && emailIsValid) {\n    formIsValid = true;\n  } //On Form Submit\n\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!formIsValid) return; // Reset position\n\n    console.log(\"Submitted\");\n    nameReset();\n    emailReset();\n  };\n\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onInput: nameInputCHangeHandler,\n        onBlur: nameInputBlurHandler,\n        id: \"name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please Enter Valid Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onInput: emailInputCHangeHandler,\n        onBlur: emailInputBlurHandler,\n        id: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Please Enter Valid Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"MZNrgEhBlYdWvETtMyuWDzdMK1c=\", false, function () {\n  return [useValidator, useValidator];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/mtech/Documents/react/form/src/components/SimpleInput.js"],"names":["useValidator","SimpleInput","props","value","name","inputIsValid","nameIsValid","hasError","nameInputHasError","valueChangeHandler","nameInputCHangeHandler","inputBlurHandler","nameInputBlurHandler","reset","nameReset","trim","email","emailIsValid","emailInputHasError","emailInputCHangeHandler","emailInputBlurHandler","emailReset","includes","formIsValid","formSubmitHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import useValidator from \"../Hooks/use-validator\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: name,\n    inputIsValid: nameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameInputCHangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    reset: nameReset,\n  } = useValidator((value) => value.trim() !== \"\");\n\n  const {\n    value: email,\n    inputIsValid: emailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailInputCHangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: emailReset,\n  } = useValidator(\n    (value) =>\n      value.trim() !== \"\" &&\n      value.trim().includes(\"@\") &&\n      value.trim().includes(\".\")\n  );\n\n  // Form Validation\n  let formIsValid = false;\n  if (nameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  //On Form Submit\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (!formIsValid) return;\n\n    // Reset position\n    console.log(\"Submitted\");\n    nameReset();\n    emailReset();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          onInput={nameInputCHangeHandler}\n          onBlur={nameInputBlurHandler}\n          id=\"name\"\n          value={name}\n        />\n      </div>\n      {nameInputHasError && (\n        <p className=\"error-text\">Please Enter Valid Input</p>\n      )}\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"text\"\n          onInput={emailInputCHangeHandler}\n          onBlur={emailInputBlurHandler}\n          id=\"email\"\n          value={email}\n        />\n      </div>\n      {emailInputHasError && (\n        <p className=\"error-text\">Please Enter Valid Input</p>\n      )}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}