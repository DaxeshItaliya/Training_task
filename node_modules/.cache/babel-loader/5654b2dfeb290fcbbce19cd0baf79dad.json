{"ast":null,"code":"var _jsxFileName = \"/home/mtech/Documents/react/login-page/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../Context/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") return {\n    value: action.value,\n    isValid: action.value.trim().includes(\"@\")\n  };\n  if (action.type === \"INPUT_BLUR\") return {\n    value: state.value,\n    isValid: state.value.trim().includes(\"@\")\n  };\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") return {\n    value: action.value,\n    isValid: action.value.trim().length > 6\n  };\n  if (action.type === \"INPUT_BLUR\") return {\n    value: state.value,\n    isValid: state.value.trim().length > 6\n  };\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = () => {\n  _s();\n\n  const ctx = useContext(AuthContext);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false\n  });\n  useEffect(() => {\n    const debouncing = setTimeout(() => {\n      console.log(\"API CAll\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    return () => {\n      clearTimeout(debouncing);\n    };\n  }, [emailState, passwordState]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    }); // setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    ctx.onLogIn(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        id: \"email\",\n        label: \"Email\",\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler,\n        isValid: emailState.isValid === false ? classes.invalid : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"password\",\n        label: \"Password\",\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler,\n        isValid: passwordState.isValid === false ? classes.invalid : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"g0mAANFzCXv8yhnUvvLUbKmlRN0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mtech/Documents/react/login-page/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","isValid","trim","includes","passwordReducer","length","Login","ctx","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","debouncing","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogIn","login","invalid","control","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../Context/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\")\n    return { value: action.value, isValid: action.value.trim().includes(\"@\") };\n\n  if (action.type === \"INPUT_BLUR\")\n    return { value: state.value, isValid: state.value.trim().includes(\"@\") };\n\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\")\n    return { value: action.value, isValid: action.value.trim().length > 6 };\n\n  if (action.type === \"INPUT_BLUR\")\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n\n  return { value: \"\", isValid: false };\n};\n\nconst Login = () => {\n  const ctx = useContext(AuthContext);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  useEffect(() => {\n    const debouncing = setTimeout(() => {\n      console.log(\"API CAll\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n\n    return () => {\n      clearTimeout(debouncing);\n    };\n  }, [emailState, passwordState]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      value: event.target.value,\n    });\n    // setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      value: event.target.value,\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\",\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\",\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    ctx.onLogIn(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          type=\"email\"\n          id=\"email\"\n          label=\"Email\"\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n          isValid={emailState.isValid === false ? classes.invalid : \"\"}\n        />\n\n        <Input\n          type=\"password\"\n          id=\"password\"\n          label=\"Password\"\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n          isValid={passwordState.isValid === false ? classes.invalid : \"\"}\n        />\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}