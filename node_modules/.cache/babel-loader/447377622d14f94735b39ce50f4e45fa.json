{"ast":null,"code":"var _jsxFileName = \"/home/mtech/Documents/react/form/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useValidator from \"../Hooks/use-validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const name = useValidator(value => value.trim() !== \"\");\n  const {\n    value: fname,\n    inputIsValid: isFnameValid,\n    hasError: fnameHasError,\n    valueChangeHandler: fnameValueChange,\n    inputBlurHandler: fnameBlurHandler,\n    reset: fnameReset\n  } = useValidator(value => value.trim() !== \"\");\n  const {\n    value: email,\n    inputIsValid: isEmailValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailValueChange,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailReset\n  } = useValidator(value => value.trim() !== \"\" && value.trim().includes(\"@\") && value.trim().includes(\".\"));\n  const formIsValid = name.isLNameValid && isFnameValid && isEmailValid;\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    fnameBlurHandler();\n    name.lnameBlurHandler();\n    emailBlurHandler();\n    if (!formIsValid) return;\n    console.log(\"Submitted\");\n    name.lnameReset();\n    fnameReset();\n    emailReset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !fnameHasError ? \"form-control\" : \"form-control invalid\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: fname,\n          onChange: fnameValueChange,\n          onBlur: fnameBlurHandler,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !name.lnameHasError ? \"form-control\" : \"form-control invalid\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: name.lname,\n          onChange: name.lnameValueChange(),\n          onBlur: name.lnameBlurHandler,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !emailHasError ? \"form-control\" : \"form-control invalid\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: emailValueChange,\n        onBlur: emailBlurHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: formIsValid ? \"\" : \"disabled\",\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"ct/YDEds4KumTh9igimI/dot8es=\", false, function () {\n  return [useValidator, useValidator, useValidator];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/home/mtech/Documents/react/form/src/components/BasicForm.js"],"names":["useValidator","BasicForm","props","name","value","trim","fname","inputIsValid","isFnameValid","hasError","fnameHasError","valueChangeHandler","fnameValueChange","inputBlurHandler","fnameBlurHandler","reset","fnameReset","email","isEmailValid","emailHasError","emailValueChange","emailBlurHandler","emailReset","includes","formIsValid","isLNameValid","formSubmitHandler","event","preventDefault","lnameBlurHandler","console","log","lnameReset","lnameHasError","lname","lnameValueChange"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,wBAAzB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,IAAI,GAAGH,YAAY,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAA7B,CAAzB;AAEA,QAAM;AACJD,IAAAA,KAAK,EAAEE,KADH;AAEJC,IAAAA,YAAY,EAAEC,YAFV;AAGJC,IAAAA,QAAQ,EAAEC,aAHN;AAIJC,IAAAA,kBAAkB,EAAEC,gBAJhB;AAKJC,IAAAA,gBAAgB,EAAEC,gBALd;AAMJC,IAAAA,KAAK,EAAEC;AANH,MAOFhB,YAAY,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAA7B,CAPhB;AASA,QAAM;AACJD,IAAAA,KAAK,EAAEa,KADH;AAEJV,IAAAA,YAAY,EAAEW,YAFV;AAGJT,IAAAA,QAAQ,EAAEU,aAHN;AAIJR,IAAAA,kBAAkB,EAAES,gBAJhB;AAKJP,IAAAA,gBAAgB,EAAEQ,gBALd;AAMJN,IAAAA,KAAK,EAAEO;AANH,MAOFtB,YAAY,CACbI,KAAD,IACEA,KAAK,CAACC,IAAN,OAAiB,EAAjB,IACAD,KAAK,CAACC,IAAN,GAAakB,QAAb,CAAsB,GAAtB,CADA,IAEAnB,KAAK,CAACC,IAAN,GAAakB,QAAb,CAAsB,GAAtB,CAJY,CAPhB;AAcA,QAAMC,WAAW,GAAGrB,IAAI,CAACsB,YAAL,IAAqBjB,YAArB,IAAqCU,YAAzD;;AAEA,QAAMQ,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACAd,IAAAA,gBAAgB;AAChBX,IAAAA,IAAI,CAAC0B,gBAAL;AACAR,IAAAA,gBAAgB;AAChB,QAAI,CAACG,WAAL,EAAkB;AAClBM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA5B,IAAAA,IAAI,CAAC6B,UAAL;AACAhB,IAAAA,UAAU;AACVM,IAAAA,UAAU;AACX,GAVD;;AAWA,sBACE;AAAM,IAAA,QAAQ,EAAEI,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAE,CAAChB,aAAD,GAAiB,cAAjB,GAAkC,sBAD/C;AAAA,gCAGE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AACE,UAAA,KAAK,EAAEJ,KADT;AAEE,UAAA,QAAQ,EAAEM,gBAFZ;AAGE,UAAA,MAAM,EAAEE,gBAHV;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AACE,QAAA,SAAS,EACP,CAACX,IAAI,CAAC8B,aAAN,GAAsB,cAAtB,GAAuC,sBAF3C;AAAA,gCAKE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AACE,UAAA,KAAK,EAAE9B,IAAI,CAAC+B,KADd;AAEE,UAAA,QAAQ,EAAE/B,IAAI,CAACgC,gBAAL,EAFZ;AAGE,UAAA,MAAM,EAAEhC,IAAI,CAAC0B,gBAHf;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA6BE;AAAK,MAAA,SAAS,EAAE,CAACV,aAAD,GAAiB,cAAjB,GAAkC,sBAAlD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,QAAQ,EAAEG,gBAFZ;AAGE,QAAA,MAAM,EAAEC,gBAHV;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF,eAuCE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAEG,WAAW,GAAG,EAAH,GAAQ,UADhC;AAEE,QAAA,QAAQ,EAAE,CAACA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CAzFD;;GAAMvB,S;UACSD,Y,EASTA,Y,EASAA,Y;;;KAnBAC,S;AA2FN,eAAeA,SAAf","sourcesContent":["import useValidator from \"../Hooks/use-validator\";\n\nconst BasicForm = (props) => {\n  const name = useValidator((value) => value.trim() !== \"\");\n\n  const {\n    value: fname,\n    inputIsValid: isFnameValid,\n    hasError: fnameHasError,\n    valueChangeHandler: fnameValueChange,\n    inputBlurHandler: fnameBlurHandler,\n    reset: fnameReset,\n  } = useValidator((value) => value.trim() !== \"\");\n\n  const {\n    value: email,\n    inputIsValid: isEmailValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailValueChange,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailReset,\n  } = useValidator(\n    (value) =>\n      value.trim() !== \"\" &&\n      value.trim().includes(\"@\") &&\n      value.trim().includes(\".\")\n  );\n\n  const formIsValid = name.isLNameValid && isFnameValid && isEmailValid;\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    fnameBlurHandler();\n    name.lnameBlurHandler();\n    emailBlurHandler();\n    if (!formIsValid) return;\n    console.log(\"Submitted\");\n    name.lnameReset();\n    fnameReset();\n    emailReset();\n  };\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div\n          className={!fnameHasError ? \"form-control\" : \"form-control invalid\"}\n        >\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            value={fname}\n            onChange={fnameValueChange}\n            onBlur={fnameBlurHandler}\n            type=\"text\"\n            id=\"name\"\n          />\n        </div>\n        <div\n          className={\n            !name.lnameHasError ? \"form-control\" : \"form-control invalid\"\n          }\n        >\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            value={name.lname}\n            onChange={name.lnameValueChange()}\n            onBlur={name.lnameBlurHandler}\n            type=\"text\"\n            id=\"name\"\n          />\n        </div>\n      </div>\n      <div className={!emailHasError ? \"form-control\" : \"form-control invalid\"}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          value={email}\n          onChange={emailValueChange}\n          onBlur={emailBlurHandler}\n          type=\"text\"\n          id=\"name\"\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button\n          className={formIsValid ? \"\" : \"disabled\"}\n          disabled={!formIsValid}\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}